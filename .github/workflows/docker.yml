name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'servers/json-validator-http/**'
      - '.github/workflows/docker.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'servers/json-validator-http/**'
      - '.github/workflows/docker.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/${{ github.repository_owner | lower }}rustmcpservers

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=${{ github.repository }}
          org.opencontainers.image.description=${{ github.event.repository.description }}
          org.opencontainers.image.url=${{ github.event.repository.html_url }}
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.version=${{ github.ref_name }}
          org.opencontainers.image.created=${{ github.event.repository.created_at }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

    - name: Build and push standalone Docker image
      id: build-standalone
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./servers/json-validator-http/Dockerfile.optimized
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:standalone-${{ steps.meta.outputs.version }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:standalone-latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      if: github.event_name != 'pull_request'
      run: |
        # Pull the built image
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:standalone-${{ steps.meta.outputs.version }}
        
        # Run the container in background
        docker run -d --name json-validator-test -p 8082:8082 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:standalone-${{ steps.meta.outputs.version }}
        
        # Wait for the container to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8082/health
        
        # Test info endpoint
        curl -f http://localhost:8082/info
        
        # Test RPC endpoint
        curl -f -X POST http://localhost:8082/rpc \
          -H "Content-Type: application/json" \
          -d '{"jsonrpc":"2.0","method":"ping","id":1}'
        
        # Test JSON validation
        curl -f -X POST http://localhost:8082/rpc \
          -H "Content-Type: application/json" \
          -d '{"jsonrpc":"2.0","method":"validate_json","id":1,"params":{"json_data":{"name":"test","age":25}}}'
        
        # Clean up
        docker stop json-validator-test
        docker rm json-validator-test