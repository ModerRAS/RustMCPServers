name: release

on:
  push:
    tags:
      - 'mcp-*-v*'   # 只监听带前缀的 tag

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        server: [json-validator, task-orchestrator]
        include:
          # JSON Validator Server
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bin: json-validator
            server: json-validator
            server_dir: json-validator-server
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: json-validator.exe
            server: json-validator
            server_dir: json-validator-server
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: json-validator
            server: json-validator
            server_dir: json-validator-server
          # Task Orchestrator Server
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bin: task-orchestrator
            server: task-orchestrator
            server_dir: task-orchestrator
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: task-orchestrator.exe
            server: task-orchestrator
            server_dir: task-orchestrator
          - os: macos-latest
            target: aarch64-apple-darwin
            bin: task-orchestrator
            server: task-orchestrator
            server_dir: task-orchestrator

    steps:
      - uses: actions/checkout@v4

      # 1. 解析 tag 前缀，得到服务器信息
      - name: parse tag
        id: vars
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          SERVER=${TAG%%-v*}
          VERSION=${TAG##*-v}
          
          # 检查是否匹配当前服务器
          if [[ "$SERVER" == "mcp-${{ matrix.server }}" ]]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "server=$SERVER" >> $GITHUB_OUTPUT
            echo "server_dir=${{ matrix.server_dir }}" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "bin=${{ matrix.bin }}" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

      # 2. 只编译匹配的服务器
      - uses: dtolnay/rust-toolchain@stable
        if: steps.vars.outputs.should_build == 'true'
        with:
          targets: ${{ matrix.target }}
      - run: |
          cd servers/${{ steps.vars.outputs.server_dir }}
          cargo build --release --bin ${{ steps.vars.outputs.bin }} --target ${{ matrix.target }}
        if: steps.vars.outputs.should_build == 'true'

      # 3. 上传 Release（只含单个文件）
      - name: upload
        uses: softprops/action-gh-release@v2
        if: steps.vars.outputs.should_build == 'true'
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            servers/${{ steps.vars.outputs.server_dir }}/target/${{ matrix.target }}/release/${{ steps.vars.outputs.bin }}